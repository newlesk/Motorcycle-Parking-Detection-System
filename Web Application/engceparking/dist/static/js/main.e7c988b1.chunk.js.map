{"version":3,"sources":["components/layout/Signedinlink.js","store/actions/authActions.js","components/layout/Signedoutlink.js","components/layout/Navbar.js","components/project/Projectsummary.js","components/project/Projectlist.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/project/Projectdetail.js","components/auth/Signin.js","components/auth/Signup.js","components/project/Createproject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","components/config/fbconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createAt","toDate","toString","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","console","log","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","licensePlate","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","add","authorId","Date","App","exact","path","component","ProjectDetail","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.e7c988b1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/create'>New Project</NavLink></li>\r\n        <li><a onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\r\n            { props.profile.initials}\r\n            </NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n    \r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({ type: 'LOGIN_SUCCESS' });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'LOGIN_ERROR', err });\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n    });\r\n  }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email, \r\n      newUser.password\r\n    ).then(resp => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        licensePlate: newUser.licensePlate,\r\n        initials: newUser.firstName[0] + newUser.lastName[0] + newUser.licensePlate[0]\r\n      });\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'SIGNUP_ERROR', err});\r\n    });\r\n  }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/signup'>Signup</NavLink></li>\r\n        <li><NavLink to='/signin'>Login</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './Signedinlink'\r\nimport SignedOutLinks from './Signedoutlink'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  // console.log(auth);\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">Motocyle Dection</Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return{\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className =\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text-darken-3\">\r\n    <span className =\"card-title\">{project.title}</span>\r\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\">{moment(project.createAt.toDate().toString()).calendar()}</p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './Projectsummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className =\"project-list section\">\r\n          { projects && projects.map(project => {\r\n            return (\r\n              <Link to={ '/project/' + project.id}>\r\n              <ProjectSummary project={project} key={project.id}/>\r\n              </Link>\r\n            )\r\n          })}\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default ProjectList","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"online-users\">\r\n            { notifications && notifications.map(item =>{\r\n              return <li key={item.id}>\r\n                <span className=\"pink-text\">{item.user} </span>\r\n                <span>{item.content}</span>\r\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n              </li>\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React, { Component } from 'react'\r\nimport ProjectList from '../project/Projectlist'\r\nimport Notifications from './Notifications'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' ,orderBy: ['createAt','desc']},\r\n    { collection: 'notifications', limit: 3, orderBy: ['time','desc']}\r\n  ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetail = (props) => {\r\n    const { project,auth} = props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>\r\n    if  ( project ) {\r\n        return (\r\n        <div className = \"container section project-details\">\r\n          <div className = \"card z-depth-0\">\r\n              <div className=\"card-content\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                  <p>{ project.content }</p>\r\n              </div>\r\n              <div className=\"card-action grey lighten-4 grey-text\">\r\n                <div>Posted in { project.authorFirstName } { project.authorLastName }</div>\r\n                  <div>{moment(project.createAt.toDate().toString()).calendar()}</div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n        )\r\n    } else {\r\n        return (\r\n                < div className=\"container center\">\r\n                    <p>------Loading Project------</p>\r\n                </div>\r\n            )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return{\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects'}\r\n    ])\r\n)(ProjectDetail)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to='/' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    licensePlate: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to='/' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">License Plate</label>\r\n            <input type=\"text\" id='licensePlate' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=> {\r\n  return {\r\n    signUp: (creds) => dispatch(signUp(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title' onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\r\n    return (dispatch, getState ,{getFirestore,getFirebase}) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName : 'Dan',\r\n            authorLastName : 'Lnwza',\r\n            authorId : 12345,\r\n            createAt : new Date()\r\n\r\n\r\n        }).then(()=>{\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n        }).catch((err)=>{\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR',err});\r\n        })\r\n        \r\n    }\r\n};","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetail from './components/project/Projectdetail'\nimport SignIn from './components/auth/Signin'\nimport SignUp from './components/auth/Signup'\nimport CreateProject from './components/project/Createproject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Navbar />\n      <Switch>\n        <Route exact path='/' component={Dashboard}/>\n        <Route path='/project/:id' component={ ProjectDetail}/>\n        <Route path='/signin' component={SignIn}/>\n        <Route path='/signup' component={SignUp}/>\n        <Route path='/create' component={CreateProject}/>\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState ={\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n      case 'LOGIN_ERROR':\r\n        console.log('login error');\r\n        return {\r\n          ...state,\r\n          authError: 'Login failed'\r\n        }\r\n  \r\n      case 'LOGIN_SUCCESS':\r\n        console.log('login success');\r\n        return {\r\n          ...state,\r\n          authError: null\r\n        }\r\n  \r\n      case 'SIGNOUT_SUCCESS':\r\n        console.log('signout success');\r\n        return state;\r\n  \r\n      case 'SIGNUP_SUCCESS':\r\n        console.log('signup success')\r\n        return {\r\n          ...state,\r\n          authError: null\r\n        }\r\n  \r\n      case 'SIGNUP_ERROR':\r\n        console.log('signup error')\r\n        return {\r\n          ...state,\r\n          authError: action.err.message\r\n        }\r\n  \r\n      default:\r\n        return state\r\n    }\r\n  };\r\n  \r\n\r\n\r\nexport default authReducer","const initState ={\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '3', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with me', content: 'blah blah blah'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error',action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers ({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","  import firebase from 'firebase/app'\r\n  import 'firebase/firestore'\r\n  import 'firebase/auth'\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyDnV8vsKxXp6E9bCFox20D0Vnp4YiqLaKU\",\r\n    authDomain: \"newlnwza.firebaseapp.com\",\r\n    databaseURL: \"https://newlnwza.firebaseio.com\",\r\n    projectId: \"newlnwza\",\r\n    storageBucket: \"newlnwza.appspot.com\",\r\n    messagingSenderId: \"32127999168\",\r\n    appId: \"1:32127999168:web:8d7b8b6c31dcea0a0c6125\",\r\n    measurementId: \"G-N21PKLL5ET\"\r\n  };\r\n  // Initialize Firebase\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true})\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase} from 'react-redux-firebase'\nimport fbConfig from './components/config/fbconfig'\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirestore,getFirebase})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true,userProfile: 'users', attachAuthIsReady: true})\n  )\n  );\n\n  store.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  });\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}